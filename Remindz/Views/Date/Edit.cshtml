@model Remindz.Models.Rdate

@{
    ViewBag.Title = "Edit";
}

@*hdg datepicker*@
<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">


@*hdg datepicker*@

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Rdate</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.RdateId)

        <div class="form-group">
            @Html.LabelFor(model => model.EventDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EventDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EventDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReminderDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReminderDate, new { htmlAttributes = new { @class = "form-control",  } })
                @Html.ValidationMessageFor(model => model.ReminderDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Completed, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Completed)
                    @Html.ValidationMessageFor(model => model.Completed, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(function () {

            $.validator.addMethod('date', function (value, element) {

                if (this.optional(element)) {
                    return true;
                }
                var valid = true;
                try {
                    $.datepicker.parseDate('dd/mm/yy', value);
                }
                catch (err) {
                    valid = false;
                }
                return valid;


                        //var isChrome = window.chrome;
                        //// make correction for chrome
                        //if (isChrome) {
                        //    var d = new Date();
                        //    return this.optional(element) ||
                        //    !/Invalid|NaN/.test(new Date(d.toLocaleDateString(value)));
                        //}
                        //    // leave default behavior
                        //else {
                        //    return this.optional(element) ||
                        //    !/Invalid|NaN/.test(new Date(value));
                        //}

            });

            $("#EventDate").datepicker({ dateFormat: 'dd/mm/yy' });
            $("#ReminderDate").datepicker({ dateFormat: 'dd/mm/yy' });
      });
    </script>
}
